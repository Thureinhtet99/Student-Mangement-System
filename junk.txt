  // "name": "lama-dev-next-dashboard",



// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id       String @id
  username String @unique
}

model Student {
  id        String     @id
  username  String     @unique
  name      String
  email     String?
  phone     String?
  address   String?
  image     String?
  gender    UserGender
  createdAt DateTime   @default(now())

  parentId String?
  parent   Parent? @relation(fields: [parentId], references: [id])
  classId  Int?
  class    Class?  @relation(fields: [classId], references: [id])
  gradeId  Int?
  grade    Grade?  @relation(fields: [gradeId], references: [id])
}

model Teacher {
  id        String     @id
  username  String     @unique
  name      String
  email     String?
  phone     String?
  address   String?
  image     String?
  gender    UserGender
  createdAt DateTime   @default(now())

  subjects Subject[]
  lessons  Lesson[]
  classes  Class[]
}

model Parent {
  id        String   @id
  username  String   @unique
  name      String
  email     String?
  phone     String?
  address   String?
  createdAt DateTime @default(now())

  students Student[]
}

model Class {
  id       Int    @id @default(autoincrement())
  name     String @unique
  capacity Int

  lessons   Lesson[]
  teacherId String?
  teacher   Teacher?  @relation(fields: [teacherId], references: [id])
  students  Student[]
  gradeId   Int?
  grade     Grade?    @relation(fields: [gradeId], references: [id])
}

model Subject {
  id   Int    @id @default(autoincrement())
  name String @unique

  teachers Teacher[]
  lessons  Lesson[]
}

model Lesson {
  id        Int      @id @default(autoincrement())
  name      String
  day       Day
  startTime DateTime
  endTime   DateTime

  subjectId  Int?
  subject    Subject?     @relation(fields: [subjectId], references: [id])
  classId    Int?
  class      Class?       @relation(fields: [classId], references: [id])
  teacherId  String?
  teacher    Teacher?     @relation(fields: [teacherId], references: [id])
  exams      Exam[]
  assignment Assignment[]
}

model Grade {
  id    Int    @id @default(autoincrement())
  level String @unique

  students Student[]
  classes  Class[]
}

model Exam {
  id        Int      @id @default(autoincrement())
  title     String
  startTime DateTime
  endTime   DateTime

  lessonId Int?
  lesson   Lesson? @relation(fields: [lessonId], references: [id])
}

model Assignment {
  id        Int      @id @default(autoincrement())
  title     String
  startDate DateTime
  dueDate   DateTime

  lessonId Int?
  lesson   Lesson? @relation(fields: [lessonId], references: [id])
}

// model Result{}

// model Attendance{}

// model Event{}

// model Announcement{}

enum UserGender {
  MALE
  FEMALE
}

enum Day {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
}
