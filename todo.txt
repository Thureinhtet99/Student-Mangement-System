"use client";

import { days } from "@/data/data";
import { AttendanceListType } from "@/types";
import { useMemo } from "react";
import {
  BarChart,
  Bar,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
  Legend,
  ResponsiveContainer,
} from "recharts";

const weekdays = days.filter((day) => day !== "Sat" && day !== "Sun");

const groupAttendanceByDay = (attendances: AttendanceListType[]) => {
  const result = weekdays.map((day) => ({
    name: day,
    present: 0,
    absent: 0,
  }));

  attendances?.forEach((attendance) => {
    const date = new Date(attendance.date);
    const dayIndex = date.getDay(); // 0 (Sun) - 6 (Sat)
    const name = days[dayIndex];
    if (weekdays.includes(name)) {
      const entry = result.find((d) => d.name === name);
      if (entry) {
        if (attendance.present === true) {
          entry.present += 1;
        } else {
          entry.absent += 1;
        }
      }
    }
  });

  return result;
};

const AttendanceChart = ({
  attendances,
}: {
  attendances: AttendanceListType[];
}) => {
  const data = useMemo(() => groupAttendanceByDay(attendances), [attendances]);

  return (
    <div className="bg-white rounded-lg w-full h-full p-4">
      {/* TITLE */}
      <h1 className="font-semibold">Students Attendance</h1>

      {/* CHART */}
      <ResponsiveContainer width="100%" height="90%">
        <BarChart width={500} height={300} data={data} barSize={20}>
          <CartesianGrid strokeDasharray="3 3" vertical={false} stroke="#ddd" />
          <XAxis
            dataKey="name"
            axisLine={false}
            tick={{ fill: "#48cae4" }}
            tickLine={false}
          />
          <YAxis axisLine={false} tick={{ fill: "#000" }} tickLine={false} />
          <Tooltip
            contentStyle={{ borderColor: "lightGray", borderRadius: "10px" }}
          />
          <Legend
            align="left"
            verticalAlign="top"
            wrapperStyle={{ paddingTop: "20px", paddingBottom: "40px" }}
          />
          <Bar
            dataKey="present"
            fill="#ade8f4"
            legendType="circle"
            radius={[10, 10, 0, 0]}
          />
          <Bar
            dataKey="absent"
            fill="#044bbd"
            legendType="circle"
            radius={[10, 10, 0, 0]}
          />
        </BarChart>
      </ResponsiveContainer>
    </div>
  );
};

export default AttendanceChart;
